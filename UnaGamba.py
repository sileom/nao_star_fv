class UnaGamba:

    names = list()
    times = list()
    keys = list()


    def get_name(self):
        return self.names


    def get_time(self):
        return self.times


    def get_keys(self):
        return self.keys

    def __init__(self):
        pass

    names.append("HeadPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.314159, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [9.19019e-08, [3, -0.666667, 0.107629], [3, 0.666667, -0.107629]],
                 [-0.331613, [3, -0.666667, 0], [3, 0.8, 0]], [0.139626, [3, -0.8, 0], [3, 0.666667, 0]],
                 [-0.0872665, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.296706, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.18682, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-0.279253, [3, -0.666667, -0.211555], [3, 0.8, 0.253866]],
                 [0.20944, [3, -0.8, -0.336373], [3, 0.666667, 0.28031]], [1.5708, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.610865, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-1.0472, [3, -0.666667, 0], [3, 0.8, 0]], [-1.0472, [3, -0.8, 0], [3, 0.666667, 0]],
                 [-1.0472, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.261799, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0.0628318, [3, -0.666667, -0.010472], [3, 0.666667, 0.010472]],
                 [0.0733038, [3, -0.666667, 0], [3, 0.8, 0]], [0.00872665, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0.0314159, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.959931, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.48353, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-1.01229, [3, -0.666667, 0], [3, 0.8, 0]], [-1.01229, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0.8, 0]], [0, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.610865, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-1.0472, [3, -0.666667, 0], [3, 0.8, 0]], [-1.0472, [3, -0.8, 0], [3, 0.666667, 0]],
                 [-1.0472, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.174533, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0.420624, [3, -0.666667, -0.0590503], [3, 0.666667, 0.0590503]],
                 [0.528835, [3, -0.666667, 0], [3, 0.8, 0]], [0.50091, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0.565487, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.0994838, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0.8, 0]], [0, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[1.22173, [3, -0.666667, 0], [3, 0.666667, 0]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [2.0944, [3, -0.666667, 0], [3, 0.8, 0]], [2.0944, [3, -0.8, 0], [3, 0.666667, 0]],
                 [2.0944, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append(
        [[0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [0.191986, [3, -0.666667, 0.15708], [3, 0.666667, -0.15708]],
         [-0.802851, [3, -0.666667, 0], [3, 0.8, 0]], [-0.174533, [3, -0.8, 0], [3, 0.666667, 0]],
         [-0.296706, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append(
        [[0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0872665, [3, -0.666667, -0.0290888], [3, 0.666667, 0.0290888]],
         [0.174533, [3, -0.666667, -0.0475999], [3, 0.8, 0.0571199]],
         [0.401426, [3, -0.8, -0.177706], [3, 0.666667, 0.148089]], [1.15192, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0.8, 0]],
                 [1.00403e-07, [3, -0.8, -1.00403e-07], [3, 0.666667, 8.36691e-08]],
                 [0.523599, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.621337, [3, -0.666667, 0], [3, 0.666667, 0]], [0.785398, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0.74351, [3, -0.666667, 0.0418879], [3, 0.8, -0.0502655]],
                 [0.436332, [3, -0.8, 0.135184], [3, 0.666667, -0.112653]], [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[1.64061, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0698132, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [1.11701, [3, -0.666667, 0], [3, 0.8, 0]], [0.855211, [3, -0.8, 0], [3, 0.666667, 0]],
                 [1.25664, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0.418879, [3, -0.666667, 0], [3, 0.8, 0]], [0.418879, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0.0872665, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-0.122173, [3, -0.666667, 0.0174533], [3, 0.8, -0.0209439]],
                 [-0.872665, [3, -0.8, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.785398, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-0.541052, [3, -0.666667, -0.0939569], [3, 0.666667, 0.0939569]],
                 [-0.221657, [3, -0.666667, 0], [3, 0.8, 0]],
                 [-0.446804, [3, -0.8, 0.0866318], [3, 0.666667, -0.0721932]],
                 [-0.698132, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [0.122173, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [0.122173, [3, -0.666667, 0], [3, 0.8, 0]], [1.74533, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[0.610865, [3, -0.666667, 0], [3, 0.666667, 0]], [1.0472, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-0.471239, [3, -0.666667, 0], [3, 0.8, 0]], [0.0698132, [3, -0.8, 0], [3, 0.666667, 0]],
                 [-0.0698132, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([1.96, 3.96, 5.96, 8.36, 10.36])
    keys.append([[-0.837758, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.51844, [3, -0.666667, 0], [3, 0.666667, 0]],
                 [-0.401426, [3, -0.666667, -0.230066], [3, 0.8, 0.276079]], [0, [3, -0.8, 0], [3, 0.666667, 0]],
                 [0, [3, -0.666667, 0], [3, 0, 0]]])
